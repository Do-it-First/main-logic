#배포용, for production
version: "3"

services:
  elasticsearch:
    container_name: elastic_search_prod
    build:
      context: ELK/elasticsearch/
      args:
        ELK_VERSION: 7.17.0
    volumes:
      - ./ELK/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,z
      - elasticsearch:/usr/share/elasticsearch/data:z
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: changeme
      # Use single node discovery in order to disable production mode and avoid bootstrap checks.
      # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
    # networks:
    #   - app-tier

  # Django 컨테이너
  backend:
    container_name: django_prod
    build:
      context: ./backend
      args:
        DJANGO_ALLOWED_HOSTS: "*"
        DJANGO_SECRET_KEY: "*"
        DJANGO_CORS_ORIGIN_WHITELIST: "*"
    command: gunicorn backend.wsgi --bind 0.0.0.0:8000
    ports:
      - 8000:8000
    volumes:
      - static_volume:/backend/staticfiles
      - media_volume:/backend/mediafiles
      - ./backend/:/backend/
    expose:
      - 8000
    env_file:
      - ./settings/prod/.env.prod

  frontend:
    container_name: react_prod
    build:
      context: ./frontend
      args:
        API_URL: "*"
    environment:
      - REACT_APP_BACKEND_URL=http://localhost:8000
    volumes:
      - ./frontend/:/frontend
      - ./frontend/node_modules/:/frontend/node_modules
      - build_folder:/frontend/build
    tty: true

  # nginx 컨테이너(서버)
  nginx:
    container_name: nginx_prod
    build: ./web
    ports:
      - 80:8080
    volumes:
      - static_volume:/backend/staticfiles
      - media_volume:/backend/mediafiles
      - build_folder:/var/www/frontend
    depends_on:
      - backend
      - frontend

# 컨테이너 내려도 데이터 유지되도록 함
volumes:
  static_volume: null
  media_volume: null
  build_folder: null
  elasticsearch:
