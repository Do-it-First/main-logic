version: "3"

services:
  elasticsearch:
    container_name: elastic_search
    build:
      context: ELK/elasticsearch/
      args:
        ELK_VERSION: 7.17.0
    volumes:
      - ./ELK/elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro,z
      - elasticsearch:/usr/share/elasticsearch/data:z
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: changeme
      # Use single node discovery in order to disable production mode and avoid bootstrap checks.
      # see: https://www.elastic.co/guide/en/elasticsearch/reference/current/bootstrap-checks.html
      discovery.type: single-node
    # networks:
    #   - app-tier

  frontend:
    container_name: react
    build:
      context: ./frontend
      # dockerfile: ./frontend/Dockerfile
    command: ["npm", "start"]
    ports:
      - 3000:3000
    # networks:
    #   - app-tier
    volumes:
      - ./frontend:/app
    environment:
      - CI=true
      - CHOKIDAR_USEPOLLING=true
    tty: true
  backend:
    container_name: django
    build:
      context: ./backend
      args:
        DJANGO_ALLOWED_HOSTS: "*"
        DJANGO_SECRET_KEY: "*"
        DJANGO_CORS_ORIGIN_WHITELIST: "*"
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - 8000:8000
    # networks:
    #   - app-tier
    volumes:
      - ./backend/:/backend/
    restart: always
    expose:
      - 8000
    env_file:
      - ./settings/dev/.env.dev
    # networks:
    #     - "backend"
#   db:
  

  redis:
    container_name: redis
    image: redis:alpine
    ports:
    - "6379:6379"
    restart: unless-stopped
    volumes: 
      - proj-redis:/data

  worker:
    container_name: worker
    build:
      context: ./backend
    restart: unless-stopped
    command: celery -A backend worker --loglevel=info
    depends_on:
      - redis
    volumes:
      - ./backend/:/backend/

volumes:
  proj-redis:
  elasticsearch:
